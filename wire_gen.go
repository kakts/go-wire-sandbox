// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/kakts/go-wire-sandbox/src/foobarbaz"
	"github.com/kakts/go-wire-sandbox/src/model"
)

// Injectors from wire.go:

// Eventの生成
func InitializeEvent(phrase string) (model.Event, error) {
	message := model.NewMessage(phrase)
	greeter := model.NewGreeter(message)
	event, err := model.NewEvent(greeter)
	if err != nil {
		return model.Event{}, err
	}
	return event, nil
}

// Bazの生成
func InitializeBaz(ctx context.Context) (foobarbaz.Baz, error) {
	foo := foobarbaz.ProvideFoo()
	bar := foobarbaz.ProvideBar(foo)
	baz, err := foobarbaz.ProvideBaz(ctx, bar)
	if err != nil {
		return foobarbaz.Baz{}, err
	}
	return baz, nil
}

func InitializeBar() string {
	myFooer := model.ProvideMyFooer()
	string2 := model.ProvideBar(myFooer)
	return string2
}

// wire.go:

// model.MyFooerの生成
// TODO
type test struct {
	f model.Fooer
}
